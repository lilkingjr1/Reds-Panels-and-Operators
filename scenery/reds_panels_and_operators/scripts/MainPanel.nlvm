/**
	Main Panel NL2 Script
	David Wolfe (Red-Thirten)
	7/27/2023
	Will texture the main panel and/or hide the audio panel, based on user settings.
	Licensed under GNU GPLv3 - See LICENSE for more details.
*/

import com.nolimitscoaster.Script;
import com.nolimitscoaster.SceneObject;
import com.nolimitscoaster.SceneObjectElement;

public class MainPanel extends Script{
	private static final String SCRIPT_NAME = "MainPanel";					// Script name for debugging
	private static final String PANEL_ELEMENT_NAME = "panel";				// Name of the panel element in the SCO/model
	private static final String AUDIO_PANEL_ELEMENT_NAME = "audio_panel";	// Name of the audio panel element in the SCO/model
	
	private static final String[] TEXTURES = {"brushed_metal", "rusty", "bumpy_metal"}; // Possible texture parameter names
	
	public bool onInit(){ // On initialization of Play simulation
		// Get and assign local sco
		SceneObject sco = getScoFromParentEntity();
		
		if ( sco.getBooleanParameter("hide_audio_panel") != null ){
			// Hide the audio panel if requested. Otherwise, texture it based on parameters
			if ( sco.getBooleanParameter("hide_audio_panel").boolValue() ){
				getElementOnScoForName(sco, AUDIO_PANEL_ELEMENT_NAME).setVisible(false);
			}
			else{
				setTextureFromScoParams(sco, getElementOnScoForName(sco, AUDIO_PANEL_ELEMENT_NAME));
			}
		}
		
		// Set the texture of the main panel based on parameters
		setTextureFromScoParams(sco, getElementOnScoForName(sco, PANEL_ELEMENT_NAME));
		
		return false; // Prevent unused onNextFrame() from running
	}
	
	private SceneObject getScoFromParentEntity(){ // Returns the SceneObject via the parent entity ID with error handling
        SceneObject sco = sim.getSceneObjectForEntityId(getParentEntityId());
        if (sco == null){
            System.throwRuntimeException(SCRIPT_NAME + ": This script only works with NL2 scene objects");
        }
        return sco;
    }
	
	private SceneObjectElement getElementOnScoForName(SceneObject sco, String name){ // Basically getElementForName() with error handling - Gratz to bestdani for idea
		SceneObjectElement element = sco.getElementForName(name);
        if (element == null){
            System.throwRuntimeException(SCRIPT_NAME + ": Wrong 3d model loaded (Cannot find \"" + name + "\" element)");
        }
        return element;
    }
	
	private void setTextureFromScoParams(SceneObject sco, SceneObjectElement element){ // Sets the texture based on parameter choice
		Boolean curBool = null;
		
		for (int i = 0; i < TEXTURES.length; i++){ // For all the parameters
			curBool = sco.getBooleanParameter( TEXTURES[i] );
			if (curBool != null && curBool.boolValue()){ // Check if it exists, and if so, what's its setting
				element.setTextureAnimationIndex(i); // Set the texture
				return;
			}
		}
	}
}