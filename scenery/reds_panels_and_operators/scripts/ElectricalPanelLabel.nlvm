// Electrical Panel Label NL2 Script
// David Wolfe (Red-Thirten)
// 6/6/2022
// Initializes the label's texture based on user settings.
// Licensed under GNU GPLv3 - See LICENSE for more details.

import com.nolimitscoaster.Script;
import com.nolimitscoaster.SceneObject;
import com.nolimitscoaster.SceneObjectElement;
import nlvm.lang.String;

import util.SpecialTrackModule;

public class ElectricalPanelLabel extends Script{
	private static final String SCRIPT_NAME = "ElectricalPanelLabel";		// Script name for debugging
	private static final String LABEL_ELEMENT_NAME = "label";				// Name of the label element in the SCO/model
	private static final String PLACARD_PARAMETER_PREFIX = "placard";		// Prefix for the placard texture parameters
	
	private SpecialTrackModule specialTrackModule;
	
	public bool onInit(){ // On initialization of Play simulation
		SceneObject sco = getScoFromParentEntity(); // Get and assign local sco
		setPlacardTextureFromScoParams( sco, getElementOnScoForName(sco, LABEL_ELEMENT_NAME) ); // Set placard texture
		
		if (sco.getSpecialTrackParameter("special_track") != null){ // If set to attach to special track, set up the module object for it
			specialTrackModule = new SpecialTrackModule(sco);
		}
		
		return true; // Everything's just dandy
	}
	
	private SceneObject getScoFromParentEntity(){ // Returns the SceneObject via the parent entity ID with error handling
        SceneObject sco = sim.getSceneObjectForEntityId(getParentEntityId());
        if (sco == null){
            System.err.println(SCRIPT_NAME + ": This script only works with NL2 scene objects");
        }
        return sco;
    }
	
	private SceneObjectElement getElementOnScoForName(SceneObject sco, String name){ // Basically getElementForName() with error handling - Gratz to bestdani for idea
		SceneObjectElement element = sco.getElementForName(name);
        if (element == null){
            System.err.println(SCRIPT_NAME + ": Wrong 3d model loaded (Cannot find \"" + name + "\" element)");
        }
        return element;
    }
	
	private void setPlacardTextureFromScoParams(SceneObject sco, SceneObjectElement element){ // Sets the placard texture based on parameters. Takes the first set parameter found.
		int index = 0;
		Boolean curBool = sco.getBooleanParameter( PLACARD_PARAMETER_PREFIX + index );
		
		while ( curBool != null && curBool.boolValue() == false ){
			index++;
			curBool = sco.getBooleanParameter( PLACARD_PARAMETER_PREFIX + index );
		}
		
		element.setTextureAnimationIndex(index);
	}
	
	public void onNextFrame(float tick){
		if (specialTrackModule != null) specialTrackModule.setTranslation(); // If set to attach to special track, set translation of SCO
	}
}